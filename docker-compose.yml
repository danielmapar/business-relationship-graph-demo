version: "3.8"
services:

  platform-api:
    build:
      context: ./platform-api
      dockerfile: Dockerfile
    volumes:
      - ./platform-api:/app
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - WATCHFILES_FORCE_POLLING=true
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_NAME=platform_api_db
      - DATABASE_USER=demo
      - DATABASE_PASSWORD=password
      - DATABASE_GRAPH=business_graph
    restart: always
    depends_on:
      - database

  database:
    container_name: "database"
    image: apache/age #postgres:16.3-alpine
    restart: always
    # set shared memory limit when using docker-compose
    # shm_size: 128mb
    environment:
      POSTGRES_DB: platform_api_db
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - database-data:/var/lib/postgresql/data
      - ./scripts/database/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh

  platform-frontend:
    container_name: platform-frontend
    build:
      context: ./platform-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./platform-frontend/src:/app/src
      - ./platform-frontend/public:/app/public
      - ./platform-frontend/index.html:/app/index.html
      - ./platform-frontend/.eslintrc.cjs:/app/.eslintrc.cjs
      - ./platform-frontend/package.json:/app/package.json
      - ./platform-frontend/package-lock.json:/app/package-lock.json
      - ./platform-frontend/tsconfig.json:/app/tsconfig.json
      - ./platform-frontend/tsconfig.node.json:/app/tsconfig.node.json
      - ./platform-frontend/vite.config.ts:/app/vite.config.ts
      - ./platform-frontend/.env.localdev:/app/.env.localdev
    ports:
      - "3000:3000"


volumes:
  database-data:
    driver: local
